{"ast":null,"code":"var _jsxFileName = \"D:\\\\web\\\\react.js\\\\sharma foods\\\\src\\\\components\\\\meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport classes from \"./AvailableMeals.module.css\";\nimport MealItem from \"./MealItem/MealItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [DUMMY_MEALS, setDUMMY_MEALS] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [errorOccurred, setErrorOccured] = useState(false);\n  useEffect(() => {\n    fetch(\"https://taskmanager-87909-default-rtdb.firebaseio.com/Meals.json\").then(Response => Response.json()).then(data => {\n      let loadedMeals = [];\n\n      for (const Key in data) {\n        loadedMeals.push({\n          id: data[Key].id,\n          description: data[Key].description,\n          price: data[Key].price,\n          name: data[Key].name\n        });\n      }\n\n      setDUMMY_MEALS(loadedMeals);\n      setIsLoading(false);\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.mealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading Meals...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this);\n  }\n\n  const meals = DUMMY_MEALS.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    meal: meal\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: meals\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"a7U3EQvPDoiAqiHynqhFhZhvRF8=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["useEffect","useState","Card","classes","MealItem","AvailableMeals","DUMMY_MEALS","setDUMMY_MEALS","isLoading","setIsLoading","errorOccurred","setErrorOccured","fetch","then","Response","json","data","loadedMeals","Key","push","id","description","price","name","mealsLoading","meals","map","meal"],"sources":["D:/web/react.js/sharma foods/src/components/meals/AvailableMeals.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport classes from \"./AvailableMeals.module.css\";\r\nimport MealItem from \"./MealItem/MealItem\";\r\n\r\nconst AvailableMeals = () => {\r\nconst [DUMMY_MEALS,setDUMMY_MEALS]=useState([]);\r\nconst [isLoading,setIsLoading]=useState(true);\r\nconst [errorOccurred,setErrorOccured]=useState(false);\r\n\r\nuseEffect(()=>{\r\n  fetch(\"https://taskmanager-87909-default-rtdb.firebaseio.com/Meals.json\")\r\n  .then((Response) => Response.json())\r\n  .then((data) => {\r\n    let loadedMeals=[];\r\n    for (const Key in data) {\r\n      loadedMeals.push({\r\n        id: data[Key].id,\r\n        description: data[Key].description,\r\n        price: data[Key].price,\r\n        name: data[Key].name,\r\n      });\r\n    }\r\n    setDUMMY_MEALS(loadedMeals);\r\n    setIsLoading(false);\r\n  });\r\n},[])\r\n\r\n  if(isLoading)\r\n  {return(\r\n    <section className={classes.mealsLoading}>\r\n      <p>Loading Meals...</p>\r\n    </section>\r\n  )}\r\n\r\n  const meals = DUMMY_MEALS.map((meal) => \r\n  <MealItem meal={meal} key={meal.id} />\r\n  );\r\n\r\n  return (\r\n    <section className={classes.meals}>\r\n      <Card>\r\n        <ul>{meals}</ul>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\nexport default AvailableMeals;\r\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;;AAEA,MAAMC,cAAc,GAAG,MAAM;EAAA;;EAC7B,MAAM,CAACC,WAAD,EAAaC,cAAb,IAA6BN,QAAQ,CAAC,EAAD,CAA3C;EACA,MAAM,CAACO,SAAD,EAAWC,YAAX,IAAyBR,QAAQ,CAAC,IAAD,CAAvC;EACA,MAAM,CAACS,aAAD,EAAeC,eAAf,IAAgCV,QAAQ,CAAC,KAAD,CAA9C;EAEAD,SAAS,CAAC,MAAI;IACZY,KAAK,CAAC,kEAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOG,IAAD,IAAU;MACd,IAAIC,WAAW,GAAC,EAAhB;;MACA,KAAK,MAAMC,GAAX,IAAkBF,IAAlB,EAAwB;QACtBC,WAAW,CAACE,IAAZ,CAAiB;UACfC,EAAE,EAAEJ,IAAI,CAACE,GAAD,CAAJ,CAAUE,EADC;UAEfC,WAAW,EAAEL,IAAI,CAACE,GAAD,CAAJ,CAAUG,WAFR;UAGfC,KAAK,EAAEN,IAAI,CAACE,GAAD,CAAJ,CAAUI,KAHF;UAIfC,IAAI,EAAEP,IAAI,CAACE,GAAD,CAAJ,CAAUK;QAJD,CAAjB;MAMD;;MACDhB,cAAc,CAACU,WAAD,CAAd;MACAR,YAAY,CAAC,KAAD,CAAZ;IACD,CAdD;EAeD,CAhBQ,EAgBP,EAhBO,CAAT;;EAkBE,IAAGD,SAAH,EACA;IAAC,oBACC;MAAS,SAAS,EAAEL,OAAO,CAACqB,YAA5B;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADD;EAIC;;EAEF,MAAMC,KAAK,GAAGnB,WAAW,CAACoB,GAAZ,CAAiBC,IAAD,iBAC9B,QAAC,QAAD;IAAU,IAAI,EAAEA;EAAhB,GAA2BA,IAAI,CAACP,EAAhC;IAAA;IAAA;IAAA;EAAA,QADc,CAAd;EAIA,oBACE;IAAS,SAAS,EAAEjB,OAAO,CAACsB,KAA5B;IAAA,uBACE,QAAC,IAAD;MAAA,uBACE;QAAA,UAAKA;MAAL;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CAzCD;;GAAMpB,c;;KAAAA,c;AA0CN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}